name: Tests and linters

on:
  workflow_call:
    inputs:
      artifacthub:
        description: "check artifacthub-pkg.yml for submission to ArtifactHub"
        required: false
        type: boolean
        default: true
    secrets: {}

jobs:
  version-check:
    name: Check Cargo.toml version
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download source code
        uses: actions/checkout@v4
      - name: Check cargo file version
        run: |
          CARGO_VERSION=$(sed  -n 's,^version = \"\(.*\)\",\1,p' Cargo.toml)
          TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')
          if [ "$CARGO_VERSION" != "$TAG_VERSION" ];then
              echo "::error title=Invalid Cargo.toml version::Cargo.toml version does not match the tag version"
              exit 1
          fi
  check-artifacthub:
    if: ${{ inputs.artifacthub }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # until https://github.com/actions/checkout/pull/579 is released
          fetch-depth: 0
      - name: Install kwctl
        uses: kubewarden/github-actions/kwctl-installer@v3.3.5
      - id: calculate-version
        run: echo "version=$(sed  -n 's,^version = \"\(.*\)\",\1,p' Cargo.toml)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Check that artifacthub-pkg.yml is up-to-date
        uses: viccuad/github-actions/check-artifacthub@main
        with:
          version: ${{ steps.calculate-version.outputs.version }}
  check:
    name: Cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
  e2e-tests:
    name: E2E testSuite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: kubewarden/github-actions/policy-gh-action-dependencies@v3.3.5
      - name: Build and annotate policy
        with:
          generate-sbom: false
        uses: kubewarden/github-actions/policy-build-rust@v3.3.5
      - name: Run e2e tests
        run: |
          make e2e-tests
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
