name: "kubewarden-policy-release"
description: "Release a Kubewarden policy"
branding:
  icon: "package"
  color: "blue"
inputs:
  annotated-wasm:
    description: "name of the annotated wasm file"
    required: false
    default: annotated-policy.wasm
  oci-target:
    required: true
    type: string
  GITHUB_TOKEN:
    required: true
    type: string
  policy-working-dir:
    description: "working directory of the policy. Useful for repos with policies in folders"
    required: false
    type: string
    default: .
  policy-version:
    description: "release version of the policy. Useful for repos with policies in folders"
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - id: calculate-version
      shell: bash
      run: |
        set -ex
        if [ "${{ inputs.policy-version }}" != "" ];then 
          # If present, it means we are dealing with tags in the form of PolicyName/v0.1.0
          # Transform the passed policy-version=0.1.0 into version=v0.1.0
          echo "version=v${{ inputs.policy-version }}" >> $GITHUB_OUTPUT
          echo "is_prerelease=${{ contains(inputs.policy-version, '-alpha') || contains(inputs.policy-version, '-beta') || contains(inputs.policy-version, '-rc') }}" >> $GITHUB_OUTPUT
        else
          # We are dealing with normal tags. Use the full tag.
          echo "version=$(echo $GITHUB_REF | sed -e 's|refs/tags/||')" >> $GITHUB_OUTPUT
          echo "is_prerelease=${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc') }}" >> $GITHUB_OUTPUT
        fi
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.GITHUB_TOKEN }}
    - name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
      shell: bash
      if: ${{ startsWith(github.ref, 'refs/heads/') }}
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        set -ex
        echo Pushing :latest policy to OCI container registry
        IMMUTABLE_REF=$(kwctl push -o json ${{ inputs.annotated-wasm }} ${{ inputs.oci-target }}:latest | jq -r .immutable_ref)

        echo Keyless signing of policy using cosign
        cosign sign --yes ${IMMUTABLE_REF}
    - name: Publish Wasm policy artifact to OCI registry with the version tag and 'latest'
      shell: bash
      if: ${{ ! startsWith(github.ref, 'refs/heads/') }}
      env:
        COSIGN_EXPERIMENTAL: 1
      working-directory: ${{ inputs.policy-working-dir }}
      run: |
        set -ex
        export OCI_TAG=${{ steps.calculate-version.outputs.version }}

        echo Pushing tagged policy to OCI container registry
        IMMUTABLE_REF=$(kwctl push -o json ${{ inputs.annotated-wasm }} ${{ inputs.oci-target }}:${OCI_TAG} | jq -r .immutable_ref)

        echo Keyless signing of policy using cosign
        cosign sign --yes ${IMMUTABLE_REF}
    - name: Create release
      if: ${{ ! startsWith(github.ref, 'refs/heads/') }}
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: ${{ github.ref_name }}
        draft: false
        prerelease: ${{ steps.calculate-version.outputs.is_prerelease }}
        files: |
          ${{ inputs.policy-working-dir }}/policy.wasm
          ${{ inputs.policy-working-dir }}/policy-sbom.spdx.json
          ${{ inputs.policy-working-dir }}/policy-sbom.spdx.cert
          ${{ inputs.policy-working-dir }}/policy-sbom.spdx.sig
